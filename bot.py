import os
import requests
import re
from telegram import Bot
from telegram.constants import ParseMode

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
URL = "https://factorio.com/download/sha256sums/"
HASH_FILE = "last_hash.txt"
PIN_FILE = "last_pin.txt"


# === –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ sha256sums ===
def fetch_sha256():
    response = requests.get(URL)
    response.raise_for_status()
    return response.text


# === –ò–∑–≤–ª–µ—á—å –≤–µ—Ä—Å–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: 2.0.57 ===
def extract_version(text):
    match = re.search(r'Setup_Factorio_(\d+\.\d+\.\d+)\.exe\.zip', text)
    return match.group(1) if match else None


# === –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ö–µ—à (–µ—Å–ª–∏ –µ—Å—Ç—å) ===
def load_last_hash():
    if not os.path.exists(HASH_FILE):
        return None
    with open(HASH_FILE, 'r') as f:
        return f.read().strip()


# === –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ö–µ—à ===
def save_current_hash(data):
    with open(HASH_FILE, 'w') as f:
        f.write(data)


# === –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π message_id ===
def load_last_pin():
    if not os.path.exists(PIN_FILE):
        return None
    with open(PIN_FILE, 'r') as f:
        return f.read().strip()


# === –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π message_id ===
def save_last_pin(message_id):
    with open(PIN_FILE, 'w') as f:
        f.write(str(message_id))


# === –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —Å message_id (–µ—Å–ª–∏ –±—ã–ª –æ—Ç–∫—Ä–µ–ø–ª—ë–Ω) ===
def clear_last_pin():
    if os.path.exists(PIN_FILE):
        os.remove(PIN_FILE)


# === –£–≤–µ–¥–æ–º–∏—Ç—å –æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –∏ –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ===
def notify(version):
    bot = Bot(token=TELEGRAM_TOKEN)

    version_escaped = version.replace('.', '\\.')
    message = (
        f"*üöÄ –í—ã—à–ª–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –§–∞–∫—Ç–æ—Ä–∏–æ\\!*\n"
        f"–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: [factorio\\.com](https://factorio.com/download)\n"
        f"–í–µ—Ä—Å–∏—è: *{version_escaped}*"
    )

    msg = bot.send_message(
        chat_id=CHAT_ID,
        text=message,
        parse_mode=ParseMode.MARKDOWN_V2,
        disable_notification=True
    )

    # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    bot.pin_chat_message(chat_id=CHAT_ID, message_id=msg.message_id, disable_notification=True)
    save_last_pin(msg.message_id)


# === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ===
def main():
    bot = Bot(token=TELEGRAM_TOKEN)

    # 1. –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    last_pin_id = load_last_pin()
    if last_pin_id:
        try:
            bot.unpin_chat_message(chat_id=CHAT_ID, message_id=int(last_pin_id))
            print("–û—Ç–∫—Ä–µ–ø–∏–ª –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        clear_last_pin()

    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ö–µ—à–∞
    current = fetch_sha256()
    last = load_last_hash()

    if last is None:
        print("–§–∞–π–ª last_hash.txt –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –∏ –≤—ã—Ö–æ–∂—É.")
        save_current_hash(current)
        return

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if current != last:
        version = extract_version(current)
        if version:
            notify(version)
        save_current_hash(current)
    else:
        print("–û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.")


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    main()
